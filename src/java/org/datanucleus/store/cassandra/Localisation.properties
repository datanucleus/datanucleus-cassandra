################################################################################
# Copyright (c) 2014 Andy Jefferson and others. All rights reserved. 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Contributions :
#
################################################################################

Cassandra.ServerConnect=Creating connection pool with database "{0}" on {1} servers ({2})
Cassandra.URLInvalid=The URL ("{0}") passed to CassandraStoreManager is invalid. Must be of the form "cassandra:[hostname][/dbName][,hostname2]".
Cassandra.DatastoreID=Datastore ID not supported for this datastore, but class "{0}" uses it.

Cassandra.Insert.Start=Object "{0}" being inserted into Cassandra with all reachable objects
Cassandra.Insert.ObjectWithIdAlreadyExists=Object "{0}" being inserted has id "{1}" yet an object with this id already exists in the datastore!
Cassandra.Insert.ObjectPersisted=Object "{0}" (id="{1}) persisted to Cassandra
Cassandra.Insert.ObjectPersistedWithVersion=Object "{0}" (id="{1}) persisted to Cassandra with version "{2}"
Cassandra.Insert.ObjectPersistedWithIdentity=Object "{0}" persisted to Cassandra has had identity set to "{1}"
Cassandra.Update.Start=Object "{0}" (id="{1}") being updated in Cassandra (for fields "{2}") with all reachable objects
Cassandra.Delete.Start=Object "{0}" (id="{1}") being deleted from Cassandra with all dependent objects
Cassandra.Delete.ObjectDeleted=Object "{0}" (id="{1}") has been deleted
Cassandra.Fetch.Start=Object "{0}" (id="{1}") being retrieved from Cassandra
Cassandra.ExecutionTime=Execution Time = {0} ms

Cassandra.Schema.CreateSchema=Creating schema using "{0}"
Cassandra.Schema.CreateSchema.Success=Schema created successfully
Cassandra.Schema.CreateTable=Creating table using "{0}"
Cassandra.Schema.CreateTable.Success=Table created successfully
Cassandra.Schema.CreateConstraint=Creating constraint using "{0}"
Cassandra.Schema.CreateConstraint.Success=Constraint created successfully
Cassandra.Schema.TableColumnTypeIncorrect=Table "{0}" has column "{1}" yet type in datastore is "{2}" (required="{3}")
Cassandra.Schema.IndexForClassWithMultipleColumns=Class "{0}" has an index defined with more than 1 column. Cassandra doesn't support composite indexes so ignoring
Cassandra.Schema.IndexForMemberWithMultipleColumns=Member "{0}" has an index defined with more than 1 column. Cassandra doesn't support composite indexes so ignoring
Cassandra.Schema.DropSchema=Dropping schema using "{0}"
Cassandra.Schema.DropSchema.Success=Schema "{0}" dropped successfully
Cassandra.Schema.DropTable=Dropping table using "{0}"
Cassandra.Schema.DropTable.Success=Table "{0}" dropped successfully
Cassandra.Schema.DropTable.DoesntExist=Table "{0}" doesn't exist so can't be dropped
Cassandra.Schema.DropConstraint=Dropping constraint using "{0}"
Cassandra.Schema.DropConstraint.Success=Constraint "{0}" dropping successfully
Cassandra.Schema.TableDoesntExist=Table for class "{0}" doesn't exist : should have name "{1}" in schema "{2}"
Cassandra.Schema.ColumnForTableDoesntExist=Table "{0}" doesn't have column "{1}" for member "{2}"
Cassandra.Schema.ColumnForTableInvalidType=Table "{0}" doesn't have column "{1}" of type "{2}"
Cassandra.Schema.ColumnTypeIncorrect=Table "{0}" column "{1}" has type="{2}" yet ought to be using type="{3}"
Cassandra.Schema.ColumnCountIncorrect=Table "{0}" should have "{1}" columns but has "{2}" columns!
Cassandra.Schema.TableIndexMissingForColumn=Table "{0}" column="{1}" should have an index but doesn't

